{"version":3,"sources":["logo.svg","components/Stamp.js","components/Caremark.js","components/TamagoSticker.js","components/TamagoStickerGenForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stamp","props","top","middle","bottom","color","Caremark","fontSize","verticalAlign","children","TamagoSticker","senderName","whereToSend","recipientName","whereToReceive","shippedAt","content","caremark","description","currentPackage","totalPackage","style","height","dangerouslySetInnerHTML","__html","map","x","i","key","destinations","TabPanel","value","index","other","role","hidden","Box","p","TamagoStickerGenForm","handleSubmit","initialValues","React","useState","tabIndex","setTabIndex","tabCnt","setTabCnt","handleChangeTabIndex","event","newValue","utils","DateFnsUtils","locale","jaJP","validationSchema","Yup","required","yourName","to","onSubmit","submitForm","isSubmitting","values","Grid","container","direction","justifyContent","alignItems","Button","variant","disabled","onClick","className","component","DatePicker","name","label","TextField","type","FormControl","width","InputLabel","htmlFor","Select","inputProps","id","MenuItem","error","errors","shrink","native","multiple","size","FormHelperText","insert","remove","push","payloads","length","payload","RadioGroup","FormControlLabel","control","Radio","CheckboxWithLabel","Label","multiline","Fab","aria-label","prevCount","Tabs","onChange","scrollButtons","Tab","App","isPreview","setIsPreview","context","setContext","useEffect","document","title","body","classList","add","from","shippedAtForDisplay","moment","format","flatMap","reduce","ax","v","Math","trunc","pair","tomorrow","Container","maxWidth","actions","console","log","JSON","stringify","setSubmitting","Boolean","window","location","hostname","match","documentElement","lang","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03d9b3ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Fragment } from 'react';\r\n\r\nfunction Stamp(props) {\r\n  const { top, middle, bottom } = props\r\n  const color = props.color || '#f00'\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"stamp\">\r\n        <span>{top}</span>\r\n        <span>{middle}</span>\r\n        <span>{bottom}</span>\r\n      </div>\r\n      <style jsx=\"true\">{`\r\n.stamp{\r\n  font-size: 10px;\r\n  border: 3px double #f00;\r\n  border-radius: 50%;\r\n  color: ${color};\r\n  width: 64px;\r\n  height: 64px;\r\n  position: relative;\r\n  margin: auto;\r\n  /* d-flex */\r\n  display: -ms-flexbox!important;\r\n  display: flex!important;\r\n  /* flex-column */\r\n  -ms-flex-direction: column!important;\r\n  flex-direction: column!important;\r\n  /* justify-content-around */\r\n  -ms-flex-pack: distribute!important;\r\n  justify-content: space-around!important;\r\n}\r\n.stamp span {\r\n  display: inline-block;\r\n  width: 100%;\r\n  text-align: center;\r\n  padding: 4px 0;\r\n  /* align-self-center */\r\n  -ms-flex-item-align: center!important;\r\n  align-self: center!important;\r\n}\r\n.stamp span:nth-child(2) {\r\n  border-top: 1px solid #f00;\r\n  border-bottom: 1px solid #f00;\r\n  line-height: 1;\r\n}\r\n      `}</style>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Stamp;","import React, { Fragment } from 'react';\r\n\r\nfunction Caremark(props) {\r\n  const color = props.color || '#f00'\r\n  const fontSize = props.fontSize || '1.2rem'\r\n  const verticalAlign = props.verticalAlign || 'top'\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"stamp vertical\">{props.children}</div>\r\n      <style jsx>{`\r\n.vertical {\r\n  writing-mode: vertical-rl;\r\n  vertical-align: ${verticalAlign};\r\n}\r\n\r\n.stamp{\r\n  transform: rotate(14deg);\r\n  color: ${color};\r\n  border-radius: 1rem;\r\n  font-size: ${fontSize};\r\n  font-weight: 700;\r\n  border: 0.25rem solid ${color};\r\n  display: inline-block;\r\n  padding: 0.25rem 1rem;\r\n  text-transform: uppercase;\r\n}\r\n      `}</style>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Caremark;","import React from 'react';\r\nimport Stamp from './Stamp';\r\nimport Caremark from './Caremark';\r\n\r\nfunction TamagoSticker(props) {\r\n  const { senderName, whereToSend, recipientName, whereToReceive, shippedAt, content, caremark, description, currentPackage, totalPackage } = props\r\n\r\n  return (\r\n    <>\r\n      <style jsx=\"true\">{`\r\n.mv-info {\r\n  font-size: 30px;\r\n}\r\n      `}</style>\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-3 border align-self-center\">\r\n          <div className=\"p-2 row border-bottom\">\r\n            <div className=\"col align-self-center\">出荷日</div>\r\n          </div>\r\n          <div className=\"p-2 row\"><div className=\"col align-self-center\">\r\n            <Stamp top=\"出荷日\" middle={shippedAt} bottom={senderName} />\r\n          </div></div>\r\n        </div>\r\n        <div className=\"col-6 align-self-center\">\r\n          <b style={{fontSize: \"80px\"}}>たまご便</b>\r\n        </div>\r\n        <div className=\"col-3 border align-self-center\" style={{height: \"117px\"}}>\r\n          <div className=\"p-2 row border-bottom\">\r\n            <div className=\"col align-self-center\">口数</div>\r\n          </div>\r\n          <div className=\"p-2 row align-self-center\" style={{height: \"80px\"}}>\r\n            <div className=\"col align-self-center\">{currentPackage}-{totalPackage}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-4 text-right\">\r\n          <div className=\"row\"><div className=\"col border-bottom mv-info\">\r\n            <i className=\"cil-flag-alt\"></i>&nbsp;{whereToSend}</div>\r\n          </div>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col border-bottom mv-info\">&nbsp;{senderName}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4 text-center align-self-center\">\r\n          <i className=\"cil-arrow-thick-right c-icon-4xl\"></i>\r\n        </div>\r\n        <div className=\"col-4 text-right\">\r\n          <div className=\"row\"><div className=\"col border-bottom mv-info\">\r\n            <i className=\"cil-flag-alt\"></i>&nbsp;{whereToReceive}</div>\r\n          </div>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col border-bottom mv-info\">&nbsp;{recipientName}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row  border mt-5\">\r\n        <div className=\"col-4 text-center align-self-center\">{content || \"その他\"}</div>\r\n        <div className=\"col-8 border-left\">\r\n          <div className=\"row\"><div className=\"col\">\r\n            <i className=\"cil-pencil\"></i>&nbsp;<b>商品名・備考</b></div>\r\n          </div>\r\n          <div className=\"row\" style={{height: \"120px\"}}>\r\n            <div className=\"col\">\r\n              <div dangerouslySetInnerHTML={{__html: description}} />\r\n              {caremark &&\r\n               caremark.map((x, i) => <Caremark key={i}>{x}</Caremark>)\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TamagoSticker;","import React from 'react';\r\nimport { Formik, Field, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField, Select, RadioGroup, CheckboxWithLabel  } from 'formik-material-ui';\r\nimport { Button, FormControlLabel, Radio } from '@material-ui/core';\r\nimport { DatePicker } from 'formik-material-ui-pickers';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n// Depending on the library you picked\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport jaJP from \"date-fns/locale/ja\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nconst destinations = [\r\n  \"本社\",\"前橋本店\",\"伊勢崎店\",\"上中居店\",\"上並榎店\",\"太田飯塚店\",\"熊谷肥塚店\",\r\n  \"鶴ヶ島店\",\"岡崎店\",\"浜松店\",\"小山城南店\",\"宇都宮IP店\",\"ｽﾏｰｸ店\",\r\n  \"新座店\",\"東松山店\",\"相模原店\",\"FKD店\",\"並木店\",\"大宮ｽﾃﾗ店\",\"ひたちなか\",\"新前橋店\",\r\n  \"京都桂川店\",\"上尾店\",\"北大路店\",\"海老名店\",\"松山店\",\"守谷店\",\"橿原店\",\"ｱﾘｵ柏店\",\"ｱﾘｵ橋本店\",\r\n  \"長岡店\",\"ﾁﾋﾞ\",\"HDｱｳﾄﾚｯﾄ\",\"物流\"\r\n];\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      {...other}\r\n    >\r\n      {value === index && (      \r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TamagoStickerGenForm = (props) => {\r\n  const {handleSubmit, initialValues} = props\r\n  const [tabIndex, setTabIndex] = React.useState(0);\r\n  const [tabCnt, setTabCnt] = React.useState(1);\r\n\r\n  const handleChangeTabIndex = (event, newValue) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>たまご便</h1>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={jaJP}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema = {Yup.object({\r\n            shippedAt: Yup.string()\r\n              .required('必須'),\r\n            yourName: Yup.string()\r\n              .required('必須'),\r\n            to: Yup.string()\r\n              .required('必須'),\r\n          })}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({submitForm, isSubmitting, values, ...props }) => (\r\n            <form onSubmit={props.handleSubmit}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  onClick={submitForm}\r\n                >\r\n                  <i className=\"cil-print\"></i>&nbsp;プレビュー\r\n                </Button>\r\n                <Field component={DatePicker} name=\"shippedAt\" label=\"出荷日\" />\r\n              </Grid>\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n              >\r\n                <Field\r\n                  component={TextField}\r\n                  label=\"あなたの名前：\"\r\n                  name=\"yourName\"\r\n                  type=\"text\"\r\n                />\r\n                <FormControl style={{ width: \"200px\" }}>\r\n                  <InputLabel htmlFor=\"from-native\">どこから送る</InputLabel>\r\n                  <Field\r\n                    component={Select}\r\n                    name=\"from\"\r\n                    inputProps={{\r\n                      id: \"from-native\",\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"本社\">本社</MenuItem>\r\n                  </Field>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n              >\r\n                <Field\r\n                  component={TextField}\r\n                  label=\"相手の名前：\"\r\n                  type=\"text\"\r\n                  name=\"recipientName\"\r\n                />\r\n\r\n                <FormControl error={!!props.errors.to}>\r\n                  <InputLabel shrink htmlFor=\"to-native\">\r\n                    どこへ送る\r\n                  </InputLabel>\r\n                  <Field\r\n                    component={Select}\r\n                    name=\"to\"\r\n                    native={true}\r\n                    multiple={true}\r\n                    inputProps={{\r\n                      id: \"to-native\",\r\n                      size: 10,\r\n                      style: { width: \"175px\" },\r\n                    }}\r\n                  >\r\n                    {destinations.map((x, i) => (\r\n                      <option key={i} value={x}>\r\n                        {x}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  {props.errors.to ? (\r\n                    <FormHelperText>{props.errors.to}</FormHelperText>\r\n                  ) : null}\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <FieldArray name=\"payloads\">\r\n                {({ insert, remove, push }) => (\r\n                  <div>\r\n                    {values.payloads.length > 0 &&\r\n                      values.payloads.map((payload, index) => (\r\n                        <TabPanel value={tabIndex} index={index} key={index}>\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"flex-start\"\r\n                          >\r\n                            <fieldset>\r\n                              <legend>品名</legend>\r\n                              <Field\r\n                                component={RadioGroup}\r\n                                name={`payloads.${index}.content`}\r\n                              >\r\n                                <Grid\r\n                                  container\r\n                                  direction=\"row\"\r\n                                  justifyContent=\"center\"\r\n                                  alignItems=\"flex-start\"\r\n                                >\r\n                                  {[\"客注\", \"返品\", \"その他\"].map((x, i) => (\r\n                                    <FormControlLabel\r\n                                      key={i}\r\n                                      control={\r\n                                        <Radio disabled={isSubmitting} />\r\n                                      }\r\n                                      value={x}\r\n                                      label={x}\r\n                                      disabled={isSubmitting}\r\n                                    />\r\n                                  ))}\r\n                                </Grid>\r\n                              </Field>\r\n                            </fieldset>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"space-between\"\r\n                            alignItems=\"flex-start\"\r\n                          >\r\n                            <fieldset>\r\n                              <legend>ケアマーク</legend>\r\n                              <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"space-around\"\r\n                                alignItems=\"flex-start\"\r\n                              >\r\n                                {[\r\n                                  \"取扱注意\",\r\n                                  \"壊れもの\",\r\n                                  \"水濡れ防止\",\r\n                                  \"横積禁止\",\r\n                                  \"踏つけ厳禁\",\r\n                                  \"カッター注意\",\r\n                                  \"積段数制限\",\r\n                                  \"直射日光・熱遮へい\",\r\n                                ].map((x, i) => (\r\n                                  <Field\r\n                                    key={i}\r\n                                    component={CheckboxWithLabel}\r\n                                    name={`payloads.${index}.caremark`}\r\n                                    type=\"checkbox\"\r\n                                    value={x}\r\n                                    Label={{ label: x }}\r\n                                  />\r\n                                ))}\r\n                              </Grid>\r\n                            </fieldset>\r\n\r\n                            <Field\r\n                              component={TextField}\r\n                              multiline\r\n                              label=\"備考\"\r\n                              name={`payloads.${index}.description`}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n  \r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"flex-end\"\r\n                            alignItems=\"flex-start\"\r\n                          >\r\n                            <Fab color=\"primary\" aria-label=\"add\" onClick={() => {\r\n                              push({\r\n                                content: \"その他\",\r\n                                description: \"\",\r\n                                caremark: [],\r\n                              });\r\n                              setTabIndex((prevCount) => prevCount + 1);\r\n                              setTabCnt((prevCount) => prevCount + 1);\r\n                            }}>\r\n                              <AddIcon />\r\n                            </Fab>\r\n                            <Fab color=\"secondary\" aria-label=\"remove\" onClick={() => {\r\n                              if(tabCnt === 1) {\r\n                                return\r\n                              }\r\n                              remove(index)\r\n                              setTabIndex(0);\r\n                              setTabCnt((prevCount) => prevCount - 1);\r\n                            }}>\r\n                              <RemoveIcon />\r\n                            </Fab>\r\n                          </Grid>\r\n\r\n                        </TabPanel>\r\n                      ))}\r\n\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n                      <Tabs\r\n                        value={tabIndex}\r\n                        onChange={handleChangeTabIndex}\r\n                        scrollButtons=\"auto\"\r\n                        variant=\"scrollable\"\r\n                      >\r\n                        {values.payloads.length > 0 &&\r\n                          values.payloads.map((payload, index) => (\r\n                            <Tab key={index} label={`${index + 1}`} />\r\n                          ))}\r\n                      </Tabs>\r\n                    </Grid>\r\n                  </div>\r\n                )}\r\n              </FieldArray>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\nexport default TamagoStickerGenForm;","import React, { useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as moment from 'moment';\r\n// https://github.com/necolas/normalize.css\r\nimport './normalize.css';\r\n// https://github.com/cognitom/paper-css\r\nimport './paper.css';\r\nimport './App.css';\r\nimport './bootstrap.css';\r\nimport './half-line.css';\r\nimport TamagoSticker from './components/TamagoSticker';\r\nimport TamagoStickerGenForm from './components/TamagoStickerGenForm';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst PAPER_SIZE = \"A4\";\r\n\r\nfunction App() {\r\n  const [isPreview, setIsPreview] = useState(false);\r\n  const [context, setContext] = useState(null)\r\n  useEffect(() => {\r\n    document.title = 'たまご便'\r\n    document.body.classList.add(PAPER_SIZE);\r\n  }, []);\r\n\r\n  const pairs = () => {\r\n    return context.to.flatMap(to => context.payloads.map(payload => ({...payload, to})))\r\n    .reduce((ax, v, i) => {\r\n      const index = Math.trunc(i/2)\r\n      const currentPackage = i % context.payloads.length + 1\r\n      ax[index] =  ax[index] || []\r\n      ax[index].push({currentPackage, ...v})\r\n      return ax\r\n    }, [])\r\n  }\r\n \r\n  if(isPreview) {\r\n    const {shippedAt, yourName, recipientName, from} = context\r\n    const shippedAtForDisplay = moment(shippedAt).format(\"YYYY.M.D\")\r\n    const totalPackage = context.payloads.length\r\n    return (\r\n      <>\r\n        <form>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setIsPreview(false)}>\r\n            <i className=\"cil-arrow-circle-left\"></i>\r\n            &nbsp;\r\n            戻る\r\n          </Button>\r\n        </form>\r\n\r\n        {\r\n          pairs().map((pair, i) => {\r\n            return(\r\n              <section key={i} className=\"sheet padding-10mm d-flex flex-column justify-content-between\">\r\n                {/* Write HTML just like a web page */}\r\n                <article>\r\n                  <TamagoSticker shippedAt={shippedAtForDisplay}\r\n                                 senderName={yourName}\r\n                                 whereToSend={from}\r\n                                 recipientName={recipientName || \"　\"}\r\n                                 whereToReceive={pair[0].to}\r\n                                 content={pair[0].content}\r\n                                 caremark={pair[0].caremark}\r\n                                 description={pair[0].description}\r\n                                 currentPackage={pair[0].currentPackage}\r\n                                 totalPackage={totalPackage} />\r\n                </article>\r\n                <hr className=\"dotted-line\" />\r\n                {\r\n                pair[1] &&\r\n                <article>\r\n                  <TamagoSticker shippedAt={shippedAtForDisplay}\r\n                                 senderName={yourName}\r\n                                 whereToSend={from}\r\n                                 recipientName={recipientName || \"　\"}\r\n                                 whereToReceive={pair[1].to}\r\n                                 content={pair[1].content}\r\n                                 caremark={pair[1].caremark}\r\n                                 description={pair[1].description}\r\n                                 currentPackage={pair[1].currentPackage}\r\n                                 totalPackage={totalPackage} />\r\n                </article>\r\n                }\r\n              </section>\r\n            )})\r\n        }\r\n      </>\r\n    );\r\n  } else {\r\n    const tomorrow = moment().add(1, 'days')\r\n\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <TamagoStickerGenForm initialValues={context || {\r\n            shippedAt: tomorrow.format('YYYY-MM-DD'),\r\n            yourName: '',\r\n            recipientName: '',\r\n            from: '本社',\r\n            payloads: [\r\n              {\r\n                content: \"その他\",\r\n                description: \"\",\r\n                caremark: [],\r\n              },\r\n            ]\r\n          }}\r\n          handleSubmit={(values, actions) => {\r\n            console.log(JSON.stringify(values, null, 2));\r\n            actions.setSubmitting(false);\r\n            setContext(values)\r\n            setIsPreview(true)\r\n          }}/>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ndocument.documentElement.lang = 'ja'\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}