{"version":3,"sources":["logo.svg","components/Stamp.js","components/TamagoSticker.js","components/TamagoStickerGenForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stamp","props","top","middle","bottom","color","className","jsx","TamagoSticker","senderName","whereToSend","recipientName","whereToReceive","shippedAt","contents","description","style","fontSize","height","dangerouslySetInnerHTML","__html","TextBox","label","useField","field","meta","htmlFor","id","name","touched","error","Checkbox","children","type","Radiobox","destinations","TamagoStickerGenForm","handleSubmit","initialValues","validationSchema","Yup","required","yourName","to","onSubmit","placeholder","size","as","value","errors","multiple","map","x","i","key","rows","cols","App","useState","isPreview","setIsPreview","context","setContext","useEffect","document","title","body","classList","add","content","from","shippedAtForDisplay","replace","onClick","reduce","ax","v","index","Math","trunc","push","pair","tomorrow","moment","format","values","actions","console","log","JSON","stringify","setSubmitting","Boolean","window","location","hostname","match","documentElement","lang","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c318f809.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Fragment } from 'react';\r\n\r\nfunction Stamp(props) {\r\n  const { top, middle, bottom } = props\r\n  const color = props.color || '#f00'\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"stamp\">\r\n        <span>{top}</span>\r\n        <span>{middle}</span>\r\n        <span>{bottom}</span>\r\n      </div>\r\n      <style jsx=\"true\">{`\r\n.stamp{\r\n  font-size: 10px;\r\n  border: 3px double #f00;\r\n  border-radius: 50%;\r\n  color: ${color};\r\n  width: 64px;\r\n  height: 64px;\r\n  position: relative;\r\n  margin: auto;\r\n  /* d-flex */\r\n  display: -ms-flexbox!important;\r\n  display: flex!important;\r\n  /* flex-column */\r\n  -ms-flex-direction: column!important;\r\n  flex-direction: column!important;\r\n  /* justify-content-around */\r\n  -ms-flex-pack: distribute!important;\r\n  justify-content: space-around!important;\r\n}\r\n.stamp span {\r\n  display: inline-block;\r\n  width: 100%;\r\n  text-align: center;\r\n  padding: 4px 0;\r\n  /* align-self-center */\r\n  -ms-flex-item-align: center!important;\r\n  align-self: center!important;\r\n}\r\n.stamp span:nth-child(2) {\r\n  border-top: 1px solid #f00;\r\n  border-bottom: 1px solid #f00;\r\n  line-height: 1;\r\n}\r\n      `}</style>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Stamp;","import React from 'react';\r\nimport Stamp from './Stamp';\r\n\r\nfunction TamagoSticker(props) {\r\n  const { senderName, whereToSend, recipientName, whereToReceive, shippedAt, contents, description } = props\r\n\r\n  return (\r\n    <>\r\n      <style jsx=\"true\">{`\r\n.mv-info {\r\n  font-size: 30px;\r\n}\r\n      `}</style>\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-3 border align-self-center\">\r\n          <div className=\"p-2 row border-bottom\">\r\n            <div className=\"col align-self-center\">出荷日</div>\r\n          </div>\r\n          <div className=\"p-2 row\"><div className=\"col align-self-center\">\r\n            <Stamp top=\"出荷日\" middle={shippedAt} bottom={senderName} />\r\n          </div></div>\r\n        </div>\r\n        <div className=\"col-6 align-self-center\">\r\n          <b style={{fontSize: \"80px\"}}>たまご便</b>\r\n        </div>\r\n        <div className=\"col-3 border align-self-center\" style={{height: \"117px\"}}>\r\n          <div className=\"p-2 row border-bottom\">\r\n            <div className=\"col align-self-center\">口数</div>\r\n          </div>\r\n          <div className=\"p-2 row align-self-center\" style={{height: \"80px\"}}>\r\n            <div className=\"col align-self-center\">1-1</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-4 text-right\">\r\n          <div className=\"row\"><div className=\"col border-bottom mv-info\">\r\n            <i className=\"cil-flag-alt\"></i>&nbsp;{whereToSend}</div>\r\n          </div>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col border-bottom mv-info\">&nbsp;{senderName}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4 text-center align-self-center\">\r\n          <i className=\"cil-arrow-thick-right c-icon-4xl\"></i>\r\n        </div>\r\n        <div className=\"col-4 text-right\">\r\n          <div className=\"row\"><div className=\"col border-bottom mv-info\">\r\n            <i className=\"cil-flag-alt\"></i>&nbsp;{whereToReceive}</div>\r\n          </div>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col border-bottom mv-info\">&nbsp;{recipientName}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row  border mt-5\">\r\n        <div className=\"col-4 text-center align-self-center\">{contents || \"その他\"}</div>\r\n        <div className=\"col-8 border-left\">\r\n          <div className=\"row\"><div className=\"col\">\r\n            <i className=\"cil-pencil\"></i>&nbsp;<b>商品名・備考</b></div>\r\n          </div>\r\n          <div className=\"row\" style={{height: \"120px\"}}>\r\n            <div className=\"col\" dangerouslySetInnerHTML={{__html: description}}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TamagoSticker;","import React from 'react';\r\nimport { Formik, useField, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst TextBox = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and also replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Checkbox = ({ children, ...props }) => {\r\n  // We need to tell useField what type of input this is\r\n  // since React treats radios and checkboxes differently\r\n  // than inputs/select/textarea.\r\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field} {...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Radiobox = ({ children, ...props }) => {\r\n  // We need to tell useField what type of input this is\r\n  // since React treats radios and checkboxes differently\r\n  // than inputs/select/textarea.\r\n  const [field, meta] = useField({ ...props, type: 'radio' });\r\n  return (\r\n    <>\r\n      <label className=\"radio\">\r\n        <input type=\"radio\" {...field} {...props} />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"text-danger\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst destinations = [\r\n  \"本社\",\"前橋本店\",\"伊勢崎店\",\"上中居店\",\"上並榎店\",\"太田飯塚店\",\"熊谷肥塚店\",\r\n  \"鶴ヶ島店\",\"岡崎店\",\"浜松店\",\"小山城南店\",\"宇都宮IP店\",\"ｽﾏｰｸ店\",\r\n  \"新座店\",\"東松山店\",\"相模原店\",\"FKD店\",\"並木店\",\"大宮ｽﾃﾗ店\",\"ひたちなか\",\"新前橋店\",\r\n  \"京都桂川店\",\"上尾店\",\"北大路店\",\"海老名店\",\"松山店\",\"守谷店\",\"橿原店\",\"ｱﾘｵ柏店\",\"ｱﾘｵ橋本店\",\r\n  \"長岡店\",\"ﾁﾋﾞ\",\"HDｱｳﾄﾚｯﾄ\",\"物流\"\r\n];\r\n\r\nconst TamagoStickerGenForm = (props) => {\r\n  const {handleSubmit, initialValues} = props\r\n  \r\n  return (\r\n  <div>\r\n    <h1>たまご便</h1>\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema = {Yup.object({\r\n        shippedAt: Yup.string()\r\n          .required('必須'),\r\n        yourName: Yup.string()\r\n          .required('必須'),\r\n        to: Yup.string()\r\n          .required('必須'),\r\n      })}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {props => (\r\n        <form onSubmit={props.handleSubmit}>\r\n          <p><button type=\"submit\">プレビュー</button></p>\r\n          <p>\r\n            <TextBox label=\"出荷日：\" name=\"shippedAt\" type=\"date\" placeholder=\"Jane\"/>\r\n          </p>\r\n          <div className=\"d-flex\">\r\n            <div className=\"d-flex flex-column\">\r\n              <p>\r\n                <TextBox label=\"あなたの名前：\" name=\"yourName\" type=\"text\" size=\"10\" />\r\n              </p>\r\n              <p>\r\n                <label htmlFor=\"from\">どこから送る：</label>\r\n                <Field name=\"from\" as=\"select\">\r\n                  <option value=\"本社\">本社</option>\r\n                </Field>\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex flex-column\">\r\n              <p>\r\n                <TextBox label=\"相手の名前：\" type=\"text\" name=\"recipientName\" size=\"10\" />\r\n              </p>\r\n              <p>\r\n                <label htmlFor=\"to\">{props.errors.to ? <span className=\"text-danger\">{props.errors.to}</span> : null}どこへ送る：</label>\r\n                <Field name=\"to\" as=\"select\" multiple size=\"10\">\r\n                {\r\n                  destinations.map((x, i) => <option key={i} value={x}>{x}</option>)\r\n                }\r\n                </Field>\r\n              \r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <fieldset>\r\n              <legend>品名</legend>\r\n              {\r\n                ['客注', '返品', 'その他']\r\n                .map((x, i) => <p key={i}><Radiobox name=\"content\" value={x}>{x}</Radiobox></p>)\r\n              }\r\n            </fieldset>\r\n            <fieldset>\r\n              <legend>ケアマーク</legend>\r\n              {\r\n                ['取扱注意', '壊れもの', '水濡れ防止', '横積禁止', '踏つけ厳禁', 'カッター注意', '積段数制限', '直射日光・熱遮へい']\r\n                .map((x, i) => <p key={i}><Checkbox name=\"caremark\" value={x}>{x}</Checkbox></p>)\r\n              }\r\n            </fieldset>\r\n            <p>\r\n              <label htmlFor=\"description\">備考：</label><br />\r\n              <Field as=\"textarea\" name=\"description\" rows=\"20\" cols=\"40\" />\r\n            </p>\r\n          </div>\r\n        </form>\r\n      \r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n}\r\nexport default TamagoStickerGenForm;","import React, { useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport * as moment from 'moment';\r\n// https://github.com/necolas/normalize.css\r\nimport './normalize.css';\r\n// https://github.com/cognitom/paper-css\r\nimport './paper.css';\r\nimport './App.css';\r\nimport './bootstrap.css';\r\nimport './half-line.css';\r\nimport TamagoSticker from './components/TamagoSticker';\r\nimport TamagoStickerGenForm from './components/TamagoStickerGenForm';\r\n\r\nconst PAPER_SIZE = \"A4\";\r\n\r\nfunction App() {\r\n  const [isPreview, setIsPreview] = useState(false);\r\n  const [context, setContext] = useState(null)\r\n  useEffect(() => {\r\n    document.title = 'たまご便'\r\n    document.body.classList.add(PAPER_SIZE);\r\n  }, []);\r\n\r\n  const pairs = () => {\r\n    return context.to.reduce((ax, v, i) => {\r\n      const index = Math.trunc(i/2)\r\n      ax[index] =  ax[index] || []\r\n      ax[index].push(v)\r\n      return ax\r\n    }, [])\r\n  }\r\n\r\n  if(isPreview) {\r\n    const {shippedAt, yourName, recipientName, content, from, description} = context\r\n    /* yyyy.m.d */\r\n    const shippedAtForDisplay = shippedAt.replace(/([0-9])-0?([0-9])-0?([0-9])/, '$1.$2.$3')\r\n    return (\r\n      <>\r\n        <form>\r\n          <button onClick={() => setIsPreview(false)}>戻る</button>\r\n        </form>\r\n\r\n        {\r\n          pairs().map((pair, i) => {\r\n            return(\r\n              <section key={i} className=\"sheet padding-10mm d-flex flex-column justify-content-between\">\r\n                {/* Write HTML just like a web page */}\r\n                <article>\r\n                  <TamagoSticker shippedAt={shippedAtForDisplay}\r\n                                 senderName={yourName}\r\n                                 whereToSend={from}\r\n                                 recipientName={recipientName || \"　\"}\r\n                                 whereToReceive={pair[0]}\r\n                                 content={content}\r\n                                 description={description} />\r\n                </article>\r\n                <hr className=\"dotted-line\" />\r\n                {\r\n                pair[1] &&\r\n                <article>\r\n                  <TamagoSticker shippedAt={shippedAtForDisplay}\r\n                                 senderName={yourName}\r\n                                 whereToSend={from}\r\n                                 recipientName={recipientName || \"　\"}\r\n                                 whereToReceive={pair[1]}\r\n                                 content={content}\r\n                                 description={description} />\r\n                </article>\r\n                }\r\n              </section>\r\n            )})\r\n        }\r\n      </>\r\n    );\r\n  } else {\r\n    const tomorrow = moment().add(1, 'days')\r\n\r\n    return (\r\n      <>\r\n        <TamagoStickerGenForm initialValues={context || {\r\n            shippedAt: tomorrow.format('YYYY-MM-DD'),\r\n            yourName: '',\r\n            recipientName: '',\r\n            from: '本社',\r\n            content: 'その他'\r\n          }}\r\n          handleSubmit={(values, actions) => {\r\n            console.log(JSON.stringify(values, null, 2));\r\n            actions.setSubmitting(false);\r\n            setContext(values)\r\n            setIsPreview(true)\r\n          }}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ndocument.documentElement.lang = 'ja'\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}